{
	"python.command.python.sortImports.title": "Trier les importations",
	"python.command.python.startREPL.title": "Démarrer REPL",
	"python.command.python.createTerminal.title": "Créer un terminal",
	"python.command.python.execInTerminal.title": "Exécuter le fichier Python dans le terminal",
	"python.command.python.debugInTerminal.title": "Déboguer le fichier Python",
	"python.command.python.execInTerminalIcon.title": "Exécuter le fichier Python",
	"python.command.python.setInterpreter.title": "Sélectionner un interpréteur",
	"python.command.python.clearWorkspaceInterpreter.title": "Effacer le paramètre de l’interpréteur d’espace de travail",
	"python.command.python.viewOutput.title": "Afficher la sortie",
	"python.command.python.viewLanguageServerOutput.title": "Afficher la sortie du serveur de langage",
	"python.command.python.configureTests.title": "Configurer les tests",
	"python.command.testing.rerunFailedTests.title": "Réexécuter les tests non réussis",
	"python.command.python.execSelectionInTerminal.title": "Exécuter la sélection/la ligne dans le terminal Python",
	"python.command.python.execSelectionInDjangoShell.title": "Exécuter la sélection/la ligne dans l’interpréteur de commandes Django",
	"python.command.python.goToPythonObject.title": "Accéder à l’objet Python",
	"python.command.python.reportIssue.title": "Signaler un problème...",
	"python.command.python.setLinter.title": "Sélectionner Linter",
	"python.command.python.enableLinting.title": "Activer/désactiver le linting",
	"python.command.python.runLinting.title": "Exécuter le linting",
	"python.command.python.enableSourceMapSupport.title": "Activer la prise en charge du mappage de source pour le débogage d’extension",
	"python.command.python.clearCacheAndReload.title": "Effacer le cache interne et recharger la fenêtre",
	"python.command.python.analysis.restartLanguageServer.title": "Redémarrer le serveur de langue",
	"python.command.python.launchTensorBoard.title": "Lancer Tensorboard",
	"python.command.python.refreshTensorBoard.title": "Actualiser TensorBoard",
	"python.menu.createNewFile.title": "Fichier Python",
	"python.autoComplete.extraPaths.description": "Liste des chemins d'accès aux bibliothèques et autres qui doivent être importés par le moteur auto complete. Par exemple, lorsque vous utilisez Google App SDK, les chemins ne sont pas dans le chemin du système, et doivent donc être ajoutés à cette liste.",
	"python.condaPath.description": "Chemin de l’exécutable conda à utiliser pour l’activation (version 4.4+)",
	"python.defaultInterpreterPath.description": "Chemin vers le Python par défaut à utiliser lorsque l'extension se charge pour la première fois, il n'est plus utilisé une fois qu'un interpréteur est sélectionné pour l'espace de travail. Voir https://aka.ms/AAfekmf pour comprendre quand ceci est utilisé",
	"python.diagnostics.sourceMapsEnabled.description": "Activez la prise en charge du mappage de source pour les traces de pile significatives dans les journaux d’erreurs.",
	"python.envFile.description": "Chemin absolu d'un fichier contenant des définitions de variables d'environnement.",
	"python.experiments.enabled.description": "Active les essais de tests A/B dans l’extension Python. Si cette option est activée, vous pouvez être inclus dans les améliorations et/ou fonctionnalités proposées.",
	"python.experiments.optInto.description": "Liste des expériences à refuser. Si elle est vide, l'utilisateur se voit attribuer les groupes d'expériences par défaut. Voir https://github.com/microsoft/vscode-python/wiki/Experiments pour plus de détails.",
	"python.experiments.optOutFrom.description": "Liste des expériences à refuser. Si elle est vide, l'utilisateur se voit attribuer les groupes d'expériences par défaut. Voir https://github.com/microsoft/vscode-python/wiki/Experiments pour plus de détails.",
	"python.formatting.autopep8Args.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.formatting.autopep8Path.description": "Chemin d'accès à autopep8, vous pouvez utiliser une version personnalisée d'autopep8 en modifiant ce paramètre pour inclure le chemin complet.",
	"python.formatting.blackArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.formatting.blackPath.description": "Chemin à Black, vous pouvez utiliser une version personnalisée de Black en modifiant ce paramètre pour inclure le chemin d'accès complet.",
	"python.formatting.provider.description": "Fournisseur de mise en forme. Les options possibles sont 'autopep8', 'black' et 'yapf'.",
	"python.formatting.yapfArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.formatting.yapfPath.description": "Chemin vers yapf, vous pouvez utiliser une version personnalisée de yapf en modifiant ce paramètre pour inclure le chemin complet.",
	"python.globalModuleInstallation.description": "Indique si les modules Python doivent être installés globalement en l’absence d’un environnement.",
	"python.languageServer.description": "Définit le type du serveur de langage.",
	"python.languageServer.defaultDescription": "Sélectionnez automatiquement un serveur de langue : Pylance si installé et disponible, sinon basculez vers Jedi.",
	"python.languageServer.jediDescription": "Utilisez le Jedi derrière le protocole LSP (Language Server Protocol) comme serveur de langage.",
	"python.languageServer.pylanceDescription": "Utilisez Pylance comme serveur de langage.",
	"python.languageServer.noneDescription": "Désactivez les fonctionnalités du serveur de langage.",
	"python.linting.banditArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.linting.banditEnabled.description": "Indique s’il faut linter les fichiers Python à l’aide de bandit.",
	"python.linting.banditPath.description": "Chemin d’accès au constructeur, vous pouvez utiliser une version personnalisée du constructeur en modifiant ce paramètre pour inclure le chemin d’accès complet.",
	"python.linting.cwd.description": "Répertoire de travail facultatif pour les linters",
	"python.linting.enabled.description": "Indique s’il faut linter les fichiers Python.",
	"python.linting.flake8Args.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.linting.flake8CategorySeverity.E.description": "Gravité du message Flake8 de type « E »",
	"python.linting.flake8CategorySeverity.F.description": "Gravité du message Flake8 de type « F »",
	"python.linting.flake8CategorySeverity.W.description": "Gravité du message Flake8 de type « W »",
	"python.linting.flake8Enabled.description": "Indique s’il faut linter les fichiers Python à l’aide de flake8.",
	"python.linting.flake8Path.description": "Chemin vers flake8, vous pouvez utiliser une version personnalisée de flake8 en modifiant ce paramètre pour inclure le chemin complet.",
	"python.linting.ignorePatterns.description": "Modèles utilisés pour exclure les fichiers ou les dossiers du mode lié",
	"python.interpreter.infoVisibility.description": "Contrôle quand afficher les informations de l’interpréteur sélectionné dans la barre d’état.",
	"python.interpreter.infoVisibility.never.description": "Ne jamais afficher des informations",
	"python.interpreter.infoVisibility.onPythonRelated.description": "Affichez les informations uniquement si des fichiers liés à Python sont ouverts.",
	"python.interpreter.infoVisibility.always.description": "Toujours afficher des informations",
	"python.linting.lintOnSave.description": "Indique s’il faut linter les fichiers Python quand ils sont enregistrés.",
	"python.linting.maxNumberOfProblems.description": "Contrôle le nombre maximal de problèmes produits par le serveur",
	"python.linting.mypyArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.linting.mypyCategorySeverity.error.description": "Gravité du type de message Mypy « Erreur ».",
	"python.linting.mypyCategorySeverity.note.description": "Gravité du type de message Mypy « Note »",
	"python.linting.mypyEnabled.description": "Indique s’il faut linter les fichiers Python à l’aide de mypy.",
	"python.linting.mypyPath.description": "Chemin vers mypy, vous pouvez utiliser une version personnalisée de mypy en modifiant ce paramètre pour inclure le chemin complet.",
	"python.linting.prospectorArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.linting.prospectorEnabled.description": "Si l'on veut lier les fichiers Python en utilisant prospecteur.",
	"python.linting.prospectorPath.description": "Chemin d'accès à Prospector, vous pouvez utiliser une version personnalisée de Prospector en modifiant ce paramètre pour inclure le chemin d'accès complet.",
	"python.linting.pycodestyleArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.linting.pycodestyleCategorySeverity.E.description": "Gravité du type de message pycodestyle « E »",
	"python.linting.pycodestyleCategorySeverity.W.description": "Gravité du type de message pycodestyle « W »",
	"python.linting.pycodestyleEnabled.description": "Indique s’il faut linter les fichiers Python à l’aide de pycodestyle.",
	"python.linting.pycodestylePath.description": "Chemin d'accès à pycodestyle. Vous pouvez utiliser une version personnalisée de pycodestyle en modifiant ce paramètre pour inclure le chemin d'accès complet.",
	"python.linting.pydocstyleArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.linting.pydocstyleEnabled.description": "Indique s’il faut linter les fichiers Python à l’aide de pydocstyle.",
	"python.linting.pydocstylePath.description": "Chemin vers pydocstyle, vous pouvez utiliser une version personnalisée de pydocstyle en modifiant ce paramètre pour inclure le chemin complet.",
	"python.linting.pylamaArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.linting.pylamaEnabled.description": "Indique s’il faut linter les fichiers Python à l’aide de pylama.",
	"python.linting.pylamaPath.description": "Chemin vers pylama, vous pouvez utiliser une version personnalisée de pylama en modifiant ce paramètre pour inclure le chemin complet.",
	"python.linting.pylintArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.linting.pylintCategorySeverity.convention.description": "Gravité du message Pylint de type « Convention/C »",
	"python.linting.pylintCategorySeverity.error.description": "Gravité du message Pylint de type « Error/E »",
	"python.linting.pylintCategorySeverity.fatal.description": "Gravité du message Pylint de type « Error/F »",
	"python.linting.pylintCategorySeverity.refactor.description": "Gravité du type de message Pylint « Refactoriser/R »",
	"python.linting.pylintCategorySeverity.warning.description": "Gravité du message Pylint de type « Warning/W »",
	"python.linting.pylintEnabled.description": "Indique s’il faut linter les fichiers Python à l’aide de pylint.",
	"python.linting.pylintPath.description": "Chemin d'accès à Pylint, vous pouvez utiliser une version personnalisée de pylint en modifiant ce paramètre pour inclure le chemin complet.",
	"python.logging.level.description": "Niveau de journalisation auquel les journaux d’extension sont situés. La valeur par défaut est « error »",
	"python.pipenvPath.description": "Chemin de l’exécutable pipenv à utiliser pour l’activation",
	"python.poetryPath.description": "Chemin de l’exécutable de l’exécutable de l’exécutable",
	"python.pylanceLspNotebooksEnabled.description": "Détermine si la prise en charge expérimentale des blocs-notes LSP de Pylance est utilisée ou non.",
	"python.sortImports.args.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.sortImports.path.description": "Chemin du script isort, valeur par défaut utilisant la version interne",
	"python.tensorBoard.logDirectory.description": "Définissez ce paramètre sur votre répertoire de journal TensorBoard préféré pour ignorer l’invite de répertoire de journal lors du démarrage de TensorBoard.",
	"python.terminal.activateEnvInCurrentTerminal.description": "Activez l’environnement Python dans le terminal actuel lors du chargement de l’extension.",
	"python.terminal.activateEnvironment.description": "Activez l’environnement Python dans le terminal créé à l’aide de l’extension.",
	"python.terminal.executeInFileDir.description": "Lors de l’exécution d’un fichier dans le terminal, indique s’il faut l’utiliser dans le répertoire du fichier, au lieu du dossier actuellement ouvert.",
	"python.terminal.focusAfterLaunch.description": "Lors du lancement d’un processus Python, indique s’il faut se concentrer sur le terminal.",
	"python.terminal.launchArgs.description": "Arguments de lancement Python à utiliser lors de l’exécution d’un fichier dans le terminal",
	"python.testing.autoTestDiscoverOnSaveEnabled.description": "Activez la découverte de test d’exécution automatique lors de l’enregistrement d’un fichier de test.",
	"python.testing.cwd.description": "Répertoire de travail facultatif pour les tests",
	"python.testing.debugPort.description": "Numéro de port utilisé pour le débogage des tests",
	"python.testing.promptToConfigure.description": "Invitez à configurer une infrastructure de tests si des répertoires de tests potentiels sont découverts.",
	"python.testing.pytestArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.testing.pytestEnabled.description": "Activez les tests à l’aide de pytest.",
	"python.testing.pytestPath.description": "Chemin vers pytest (pytest), vous pouvez utiliser une version personnalisée de pytest en modifiant ce paramètre pour inclure le chemin complet.",
	"python.testing.unittestArgs.description": "Arguments passés. Chaque argument est un élément distinct dans le tableau.",
	"python.testing.unittestEnabled.description": "Activez les tests à l’aide d’unittest.",
	"python.venvFolders.description": "Dossiers de votre répertoire de base dans lesquels rechercher des environnements virtuels (prend en charge pyenv, direnv et virtualenvwrapper par défaut).",
	"python.venvPath.description": "Chemin du dossier avec une liste d’environnements virtuels (par exemple ~/.pyenv, ~/Envs, ~/.virtualenvs)."
}