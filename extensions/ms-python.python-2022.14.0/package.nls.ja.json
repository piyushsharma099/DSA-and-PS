{
	"python.command.python.sortImports.title": "インポートの並べ替え",
	"python.command.python.startREPL.title": "Start REPL",
	"python.command.python.createTerminal.title": "ターミナルを作成する",
	"python.command.python.execInTerminal.title": "ターミナルで Python ファイルを実行する",
	"python.command.python.debugInTerminal.title": "Python ファイルのデバッグ",
	"python.command.python.execInTerminalIcon.title": "新しい Python ファイル",
	"python.command.python.setInterpreter.title": "インタープリターを選択",
	"python.command.python.clearWorkspaceInterpreter.title": "ワークスペース インタープリター設定をクリア",
	"python.command.python.viewOutput.title": "出力の表示",
	"python.command.python.viewLanguageServerOutput.title": "言語サーバー出力を表示する",
	"python.command.python.configureTests.title": "テストを構成する",
	"python.command.testing.rerunFailedTests.title": "失敗したテストの再実行",
	"python.command.python.execSelectionInTerminal.title": "Python ターミナルで選択範囲/行を実行する",
	"python.command.python.execSelectionInDjangoShell.title": "Django シェルでの選択範囲/行の実行",
	"python.command.python.goToPythonObject.title": "Python オブジェクトに移動する",
	"python.command.python.reportIssue.title": "問題を英語で報告...",
	"python.command.python.setLinter.title": "リンターを選択",
	"python.command.python.enableLinting.title": "リンティングの有効化/無効化",
	"python.command.python.runLinting.title": "はい、通知してください",
	"python.command.python.enableSourceMapSupport.title": "拡張機能デバッグのソース マップ サポートを有効にする",
	"python.command.python.clearCacheAndReload.title": "内部キャッシュのクリアとウィンドウの再読み込み",
	"python.command.python.analysis.restartLanguageServer.title": "言語サーバーの再起動",
	"python.command.python.launchTensorBoard.title": "Tensorboard を起動する",
	"python.command.python.refreshTensorBoard.title": "TensorBoard を更新する",
	"python.menu.createNewFile.title": "Python ファイル",
	"python.autoComplete.extraPaths.description": "オートコンプリート エンジンでインポートする必要があるライブラリなどへのパスのリスト。たとえば、Google App SDK を使用する場合、パスはシステム パスにないため、このリストに追加する必要があります。",
	"python.condaPath.description": "アクティブ化に使用する Conda 実行可能ファイルへのパス (バージョン 4.4 以降)。",
	"python.defaultInterpreterPath.description": "拡張機能が初めて読み込まれるときに使用する既定の Python へのパス。ワークスペースにインタープリターが選択されると使用されなくなります。https://aka.ms/AAfekmf を参照して、これがいつ使用されるかを理解してください",
	"python.diagnostics.sourceMapsEnabled.description": "エラー ログで意味のあるスタック トレースのソース マップ サポートを有効にします。",
	"python.envFile.description": "環境変数定義が含まれているファイルへの絶対パス。",
	"python.experiments.enabled.description": "Python 拡張機能で A/B テストの実験を有効にします。有効にすると、提案された拡張機能や機能に含まれる可能性があります。",
	"python.experiments.optInto.description": "オプトアウトする実験のリスト。空の場合、ユーザーには既定の実験グループが割り当てられます。詳細については、https://github.com/microsoft/vscode-python/wiki/Experiments を参照してください。",
	"python.experiments.optOutFrom.description": "オプトアウトする実験のリスト。空の場合、ユーザーには既定の実験グループが割り当てられます。詳細については、https://github.com/microsoft/vscode-python/wiki/Experiments を参照してください。",
	"python.formatting.autopep8Args.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.formatting.autopep8Path.description": "autopep8 へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの autopep8 を使用できます。",
	"python.formatting.blackArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.formatting.blackPath.description": "Black へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの Black を使用できます。",
	"python.formatting.provider.description": "書式設定のプロバイダー。使用可能なオプションには、`autopep8`、`black`、`yapf` があります。",
	"python.formatting.yapfArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.formatting.yapfPath.description": "yapf へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの yapf を使用できます。",
	"python.globalModuleInstallation.description": "環境を使用しない場合に Python モジュールをグローバルにインストールするかどうか。",
	"python.languageServer.description": "言語サーバーの種類を定義します。",
	"python.languageServer.defaultDescription": "言語サーバーを自動的に選択する: インストールされて使用可能な場合は Pylance、それ以外の場合は、Jedi にフォールバックします。",
	"python.languageServer.jediDescription": "言語サーバーとして言語サーバー プロトコル (LSP) の背後で Jedi を使用します。",
	"python.languageServer.pylanceDescription": "言語サーバーとして Pylance を使用します。",
	"python.languageServer.noneDescription": "言語サーバーの機能を無効にします。",
	"python.linting.banditArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.linting.banditEnabled.description": "bandit を使用して Python ファイルをリントするかどうか。",
	"python.linting.banditPath.description": "bandit へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの bandit を使用できます。",
	"python.linting.cwd.description": "リンターの作業ディレクトリ (省略可能)。",
	"python.linting.enabled.description": "Python ファイルをリントするかどうか。",
	"python.linting.flake8Args.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.linting.flake8CategorySeverity.E.description": "Flake8 メッセージの種類 'E' の重大度。",
	"python.linting.flake8CategorySeverity.F.description": "Flake8 メッセージの種類 'F' の重大度。",
	"python.linting.flake8CategorySeverity.W.description": "Flake8 メッセージの種類 `W` の重大度。",
	"python.linting.flake8Enabled.description": "flake8 を使用して Python ファイルをリントするかどうか。",
	"python.linting.flake8Path.description": "flake8 へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの flake8 を使用できます。",
	"python.linting.ignorePatterns.description": "ファイルまたはフォルダーをリントから除外するために使用されるパターン。",
	"python.interpreter.infoVisibility.description": "選択したインタープリターをステータス バーに表示するタイミングをコントロールします。",
	"python.interpreter.infoVisibility.never.description": "情報を表示しません。",
	"python.interpreter.infoVisibility.onPythonRelated.description": "Python 関連ファイルが開かれている場合にのみ情報を表示します。",
	"python.interpreter.infoVisibility.always.description": "常に情報を表示します。",
	"python.linting.lintOnSave.description": "保存時に Python ファイルをリントするかどうか。",
	"python.linting.maxNumberOfProblems.description": "サーバーによって生成される問題の最大数を制御します。",
	"python.linting.mypyArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.linting.mypyCategorySeverity.error.description": "Mypy メッセージの種類 'Error' の重要度。",
	"python.linting.mypyCategorySeverity.note.description": "Mypy メッセージの種類 `Note` の重要度。",
	"python.linting.mypyEnabled.description": "mypy を使用して Python ファイルをリントするかどうか。",
	"python.linting.mypyPath.description": "mypy へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの mypy を使用できます。",
	"python.linting.prospectorArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.linting.prospectorEnabled.description": "プロスペクターを使用して Python ファイルをリントするかどうか。",
	"python.linting.prospectorPath.description": "Prospector へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの prospector を使用できます。",
	"python.linting.pycodestyleArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.linting.pycodestyleCategorySeverity.E.description": "pycodestyle メッセージの種類 `E` の重要度。",
	"python.linting.pycodestyleCategorySeverity.W.description": "pycodestyle メッセージの種類 `W` の重要度。",
	"python.linting.pycodestyleEnabled.description": "pycodestyle を使用して Python ファイルをリントするかどうか。",
	"python.linting.pycodestylePath.description": "pycodestyle へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの pycodestyle を使用できます。",
	"python.linting.pydocstyleArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.linting.pydocstyleEnabled.description": "pydocstyle を使用して Python ファイルをリントするかどうか。",
	"python.linting.pydocstylePath.description": "pydocstyle へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの pydocstyle を使用できます。",
	"python.linting.pylamaArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.linting.pylamaEnabled.description": "pylama を使用して Python ファイルをリントするかどうか。",
	"python.linting.pylamaPath.description": "pylama へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの pylama を使用できます。",
	"python.linting.pylintArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.linting.pylintCategorySeverity.convention.description": "Pylint メッセージの種類 `Convention/C` の重要度。",
	"python.linting.pylintCategorySeverity.error.description": "Plylint メッセージの種類 `Error/E` の重要度。",
	"python.linting.pylintCategorySeverity.fatal.description": "Pylint メッセージの種類 `Error/F` の重要度。",
	"python.linting.pylintCategorySeverity.refactor.description": "Pylint メッセージの種類 `Refactor/R` の重要度。",
	"python.linting.pylintCategorySeverity.warning.description": "Plylint メッセージの種類 `Warning/W` の重要度。",
	"python.linting.pylintEnabled.description": "pylint を使用して Python ファイルをリントするかどうか。",
	"python.linting.pylintPath.description": "Pylint へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの Pylint を使用できます。",
	"python.logging.level.description": "拡張機能がログに記録するログ レベルは、既定で `error` になります",
	"python.pipenvPath.description": "アクティブ化に使用する pipenv 実行可能ファイルへのパス。",
	"python.poetryPath.description": "poetry 実行可能ファイルへのパス。",
	"python.pylanceLspNotebooksEnabled.description": "Pylance の試験的な LSP ノートブック サポートを使用するかどうかを決定します。",
	"python.sortImports.args.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.sortImports.path.description": "isort スクリプトへのパス (既定では内部バージョンを使用)",
	"python.tensorBoard.logDirectory.description": "TensorBoard の起動時にログ ディレクトリ プロンプトをスキップするには、この設定を優先する TensorBoard ログ ディレクトリに設定します。",
	"python.terminal.activateEnvInCurrentTerminal.description": "拡張機能の読み込み時に、現在のターミナルで Python 環境をアクティブにします。",
	"python.terminal.activateEnvironment.description": "拡張機能を使用して作成されたターミナルで Python 環境をアクティブにします。",
	"python.terminal.executeInFileDir.description": "ターミナルでファイルを実行する場合、現在開いているフォルダーではなく、ファイルのディレクトリで execute を使用するかどうか。",
	"python.terminal.focusAfterLaunch.description": "Python プロセスの起動時に、ターミナルにフォーカスするかどうか。",
	"python.terminal.launchArgs.description": "ターミナルでファイルを実行するときに使用する Python 起動引数。",
	"python.testing.autoTestDiscoverOnSaveEnabled.description": "テスト ファイルを保存するときに、自動実行テスト検出を有効にします。",
	"python.testing.cwd.description": "テストの作業ディレクトリ (省略可能)。",
	"python.testing.debugPort.description": "テストのデバッグに使用されるポート番号。",
	"python.testing.promptToConfigure.description": "潜在的なテスト ディレクトリが検出された場合は、テスト フレームワークを構成するように求められます。",
	"python.testing.pytestArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.testing.pytestEnabled.description": "pytest を使用したテストを有効にします。",
	"python.testing.pytestPath.description": "pytest (pytest) へのパスです。この設定を変更して完全なパスを含めることで、カスタム バージョンの pytest を使用できます。",
	"python.testing.unittestArgs.description": "引数が渡されました。各引数は配列内の個別の項目です。",
	"python.testing.unittestEnabled.description": "unittest を使用したテストを有効にします。",
	"python.venvFolders.description": "仮想環境を検索するホーム ディレクトリ内のフォルダー (既定では pyenv、direnv、virtualenvwrapper をサポート)。",
	"python.venvPath.description": "仮想環境のリストを含むフォルダーへのパス (例: ~/.pyenv、~/Envs、~/.virtualenvs)。"
}