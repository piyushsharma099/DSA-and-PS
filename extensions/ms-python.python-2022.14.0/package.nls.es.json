{
	"python.command.python.sortImports.title": "Ordenar las importaciones",
	"python.command.python.startREPL.title": "Iniciar REPL",
	"python.command.python.createTerminal.title": "Crear terminal",
	"python.command.python.execInTerminal.title": "Ejecutar el archivo de Python en terminal",
	"python.command.python.debugInTerminal.title": "Depurar archivo de Python",
	"python.command.python.execInTerminalIcon.title": "Ejecutar archivo de Python",
	"python.command.python.setInterpreter.title": "Seleccionar intérprete",
	"python.command.python.clearWorkspaceInterpreter.title": "Borrar la configuración del intérprete del área de trabajo",
	"python.command.python.viewOutput.title": "Mostrar salida",
	"python.command.python.viewLanguageServerOutput.title": "Mostrar la salida del servidor de lenguaje",
	"python.command.python.configureTests.title": "Configurar pruebas",
	"python.command.testing.rerunFailedTests.title": "Volver a ejecutar las pruebas con errores",
	"python.command.python.execSelectionInTerminal.title": "Ejecutar selección o línea en el terminal de Python",
	"python.command.python.execSelectionInDjangoShell.title": "Ejecutar la selección o línea en el shell de Django",
	"python.command.python.goToPythonObject.title": "Ir al objeto de Python",
	"python.command.python.reportIssue.title": "Notificar problema...",
	"python.command.python.setLinter.title": "Seleccionar Linter",
	"python.command.python.enableLinting.title": "Habilitar o deshabilitar linting",
	"python.command.python.runLinting.title": "Ejecutar linting",
	"python.command.python.enableSourceMapSupport.title": "Habilitar la compatibilidad del mapa de origen para la depuración de extensiones",
	"python.command.python.clearCacheAndReload.title": "Borrar caché interna y volver a cargar ventana",
	"python.command.python.analysis.restartLanguageServer.title": "Reiniciar servidor de lenguaje",
	"python.command.python.launchTensorBoard.title": "Iniciar Tensorboard",
	"python.command.python.refreshTensorBoard.title": "Actualizar TensorBoard",
	"python.menu.createNewFile.title": "Archivo de Python",
	"python.autoComplete.extraPaths.description": "Lista de rutas de acceso a bibliotecas y similares que el motor de autocompletar debe importar. Por ejemplo, cuando se usa Google App SDK, las rutas de acceso no se encuentran en la ruta de acceso del sistema, por lo que deben agregarse a esta lista.",
	"python.condaPath.description": "Ruta de acceso al ejecutable de conda que se va a usar para la activación (versión 4.4+).",
	"python.defaultInterpreterPath.description": "Ruta de acceso predeterminada de Python que se usará cuando la extensión se cargue por primera vez, ya no se usará una vez que se seleccione un intérprete para el área de trabajo. Consulte https://aka.ms/AAfekmf para comprender cuándo se usa",
	"python.diagnostics.sourceMapsEnabled.description": "Habilite la compatibilidad con el mapa de origen para hacer seguimientos de pila significativos en los registros de errores.",
	"python.envFile.description": "Ruta de acceso absoluta a un archivo que contiene definiciones de variables de entorno.",
	"python.experiments.enabled.description": "Habilita experimentos de pruebas A/B en la extensión de Python. Si se habilita, puede incluirse en las mejoras o características propuestas.",
	"python.experiments.optInto.description": "Lista de experimentos de los que participar. Si está vacía, se asignan al usuario los grupos de experimentos predeterminados. Consulte https://github.com/microsoft/vscode-python/wiki/Experiments para obtener más detalles.",
	"python.experiments.optOutFrom.description": "Lista de experimentos de los que no participar. Si está vacía, se asignan al usuario los grupos de experimentos predeterminados. Consulte https://github.com/microsoft/vscode-python/wiki/Experiments para obtener más detalles.",
	"python.formatting.autopep8Args.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.formatting.autopep8Path.description": "Ruta de acceso a autopep8, puede usar una versión personalizada de autopep8 modificando esta configuración para incluir la ruta de acceso completa.",
	"python.formatting.blackArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.formatting.blackPath.description": "Ruta de acceso a Black, puede usar una versión personalizada de Black modificando esta configuración para incluir la ruta de acceso completa.",
	"python.formatting.provider.description": "Proveedor de formato. Entre las opciones posibles se incluyen \"autopep8\", \"black\" y \"yapf\".",
	"python.formatting.yapfArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.formatting.yapfPath.description": "Ruta de acceso a yapf, puede usar una versión personalizada de yapf modificando esta configuración para incluir la ruta de acceso completa.",
	"python.globalModuleInstallation.description": "Indica si se van a instalar módulos de Python globalmente cuando no se usa un entorno.",
	"python.languageServer.description": "Define el tipo de servidor de lenguaje.",
	"python.languageServer.defaultDescription": "Selecciona automáticamente un servidor de lenguaje: Pylance si está instalado y disponible; de lo contrario, vuelve a Jedi.",
	"python.languageServer.jediDescription": "Usa Jedi detrás del Protocolo del servidor de lenguaje (LSP) como servidor de lenguaje.",
	"python.languageServer.pylanceDescription": "Use Pylance como servidor de lenguaje.",
	"python.languageServer.noneDescription": "Deshabilite las funcionalidades del servidor de lenguaje.",
	"python.linting.banditArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.linting.banditEnabled.description": "Indica si se deben lintar los archivos de Python mediante bandido.",
	"python.linting.banditPath.description": "Ruta de acceso al bandido, puede usar una versión personalizada de un bandido modificando esta configuración para incluir la ruta de acceso completa.",
	"python.linting.cwd.description": "Directorio de trabajo opcional para linters.",
	"python.linting.enabled.description": "Indica si se deben lintar los archivos de Python.",
	"python.linting.flake8Args.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.linting.flake8CategorySeverity.E.description": "Gravedad del tipo de mensaje \"E\" de Flake8.",
	"python.linting.flake8CategorySeverity.F.description": "Gravedad del tipo de mensaje \"F\" de Flake8.",
	"python.linting.flake8CategorySeverity.W.description": "Gravedad del tipo de mensaje \"W\" de Flake8.",
	"python.linting.flake8Enabled.description": "Indica si se deben lintar los archivos de Python mediante flake8.",
	"python.linting.flake8Path.description": "Ruta de acceso a flake8, puede usar una versión personalizada de flake8 modificando esta configuración para incluir la ruta de acceso completa.",
	"python.linting.ignorePatterns.description": "Patrones usados para que no se linten archivos o carpetas.",
	"python.interpreter.infoVisibility.description": "Controla cuándo mostrar información del intérprete seleccionado en la barra de estado.",
	"python.interpreter.infoVisibility.never.description": "No mostrar nunca información.",
	"python.interpreter.infoVisibility.onPythonRelated.description": "Solo muestra información si se abren archivos relacionados con Python.",
	"python.interpreter.infoVisibility.always.description": "Mostrar siempre información.",
	"python.linting.lintOnSave.description": "Indica si se deben lintar los archivos de Python cuando se guardan.",
	"python.linting.maxNumberOfProblems.description": "Controla el número máximo de problemas producidos por el servidor.",
	"python.linting.mypyArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.linting.mypyCategorySeverity.error.description": "Gravedad del tipo de mensaje de Mypy \"Error\".",
	"python.linting.mypyCategorySeverity.note.description": "Gravedad del tipo de mensaje de Mypy \"Note\".",
	"python.linting.mypyEnabled.description": "Indica si se deben lintar los archivos de Python mediante mypy.",
	"python.linting.mypyPath.description": "Ruta de acceso a mypy, puede usar una versión personalizada de mypy modificando esta configuración para incluir la ruta de acceso completa.",
	"python.linting.prospectorArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.linting.prospectorEnabled.description": "Indica si se deben lintar los archivos de Python con el prospector.",
	"python.linting.prospectorPath.description": "Ruta de acceso a Prospector, puede usar una versión personalizada de Prospector modificando esta configuración para incluir la ruta de acceso completa.",
	"python.linting.pycodestyleArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.linting.pycodestyleCategorySeverity.E.description": "Gravedad del tipo de mensaje pycodestyle 'E'.",
	"python.linting.pycodestyleCategorySeverity.W.description": "Gravedad del tipo de mensaje pycodestyle 'W'.",
	"python.linting.pycodestyleEnabled.description": "Indica si se deben lintar los archivos de Python mediante pycodestyle.",
	"python.linting.pycodestylePath.description": "Ruta de acceso a pycodestyle, puede usar una versión personalizada de pycodestyle modificando esta configuración para incluir la ruta de acceso completa.",
	"python.linting.pydocstyleArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.linting.pydocstyleEnabled.description": "Indica si se deben lintar los archivos de Python mediante pydocstyle.",
	"python.linting.pydocstylePath.description": "Ruta de acceso a pydocstyle, puede usar una versión personalizada de pydocstyle modificando esta configuración para incluir la ruta de acceso completa.",
	"python.linting.pylamaArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.linting.pylamaEnabled.description": "Indica si se deben lintar los archivos de Python mediante pylama.",
	"python.linting.pylamaPath.description": "Ruta de acceso a pylama, puede usar una versión personalizada de pylama modificando esta configuración para incluir la ruta de acceso completa.",
	"python.linting.pylintArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.linting.pylintCategorySeverity.convention.description": "Gravedad del tipo de mensaje de Pylint \"Convention/C\".",
	"python.linting.pylintCategorySeverity.error.description": "Gravedad del tipo de mensaje de Pylint \"Error/E\".",
	"python.linting.pylintCategorySeverity.fatal.description": "Gravedad del tipo de mensaje de Pylint \"Error/F\".",
	"python.linting.pylintCategorySeverity.refactor.description": "Gravedad del tipo de mensaje de Pylint \"Refactor/R\".",
	"python.linting.pylintCategorySeverity.warning.description": "Gravedad del tipo de mensaje de Pylint \"Warning/W\".",
	"python.linting.pylintEnabled.description": "Indica si se deben lintar los archivos de Python mediante pylint.",
	"python.linting.pylintPath.description": "Ruta de acceso a Pylint, puede usar una versión personalizada de Pylint modificando esta configuración para incluir la ruta de acceso completa.",
	"python.logging.level.description": "Nivel de registro en el que se registra la extensión; el valor predeterminado es \"error\".",
	"python.pipenvPath.description": "Ruta de acceso al ejecutable pipenv que se va a usar para la activación.",
	"python.poetryPath.description": "Ruta de acceso al ejecutable poetry.",
	"python.pylanceLspNotebooksEnabled.description": "Determina si se usa o no la compatibilidad experimental con los blocs de notas LSP de Pylance.",
	"python.sortImports.args.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.sortImports.path.description": "Ruta de acceso a la secuencia de comandos, predeterminada con la versión interna",
	"python.tensorBoard.logDirectory.description": "Establezca esta configuración en el directorio de registro de TensorBoard que prefiera para omitir el aviso del directorio de registro al iniciar TensorBoard.",
	"python.terminal.activateEnvInCurrentTerminal.description": "Active el entorno de Python en el terminal actual al cargar la extensión.",
	"python.terminal.activateEnvironment.description": "Active el entorno de Python en el terminal creado con la extensión.",
	"python.terminal.executeInFileDir.description": "Al ejecutar un archivo en el terminal, si se debe usar ejecutar en el directorio del archivo en lugar de en la carpeta abierta actual.",
	"python.terminal.focusAfterLaunch.description": "Al iniciar un proceso de Python, si se debe centrar en el terminal.",
	"python.terminal.launchArgs.description": "Argumentos de inicio de Python que se usarán al ejecutar un archivo en el terminal.",
	"python.testing.autoTestDiscoverOnSaveEnabled.description": "Habilite la detección de pruebas de ejecución automática al guardar un archivo de prueba.",
	"python.testing.cwd.description": "Directorio de trabajo opcional para pruebas.",
	"python.testing.debugPort.description": "Número de puerto usado para la depuración de pruebas.",
	"python.testing.promptToConfigure.description": "Se le pedirá que configure un marco de pruebas si se detectan directorios de pruebas potenciales.",
	"python.testing.pytestArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.testing.pytestEnabled.description": "Habilite las pruebas con pytest.",
	"python.testing.pytestPath.description": "Ruta de acceso a pytest (pytest), puede usar una versión personalizada de pytest modificando esta configuración para incluir la ruta de acceso completa.",
	"python.testing.unittestArgs.description": "Argumentos aprobados. Cada argumento es un elemento independiente de la matriz.",
	"python.testing.unittestEnabled.description": "Habilite las pruebas con unittest.",
	"python.venvFolders.description": "Carpetas del directorio principal para buscar entornos virtuales (admite pyenv, direnv y virtualenvwrapper de forma predeterminada).",
	"python.venvPath.description": "Ruta de acceso a la carpeta con una lista de entornos virtuales (por ejemplo, ~/.pyenv, ~/Envs, ~/.virtualenvs)."
}