{
	"python.command.python.sortImports.title": "Сортировать импорты",
	"python.command.python.startREPL.title": "Запустить REPL",
	"python.command.python.createTerminal.title": "Создать терминал",
	"python.command.python.execInTerminal.title": "Запустить файл Python в терминале",
	"python.command.python.debugInTerminal.title": "Отладка файла Python",
	"python.command.python.execInTerminalIcon.title": "Запуск файла Python",
	"python.command.python.setInterpreter.title": "Выбор интерпретатора",
	"python.command.python.clearWorkspaceInterpreter.title": "Очистить параметр интерпретатора рабочей области",
	"python.command.python.viewOutput.title": "Показать выходные данные",
	"python.command.python.viewLanguageServerOutput.title": "Показать выходные данные языкового сервера",
	"python.command.python.configureTests.title": "Настройка тестов",
	"python.command.testing.rerunFailedTests.title": "Повторить запуск неудачных тестов",
	"python.command.python.execSelectionInTerminal.title": "Запустить выделение или строку в терминале Python",
	"python.command.python.execSelectionInDjangoShell.title": "Запустить выделение или строку в оболочке Django",
	"python.command.python.goToPythonObject.title": "Перейти к объекту Python",
	"python.command.python.reportIssue.title": "Сообщить о проблеме...",
	"python.command.python.setLinter.title": "Выбор анализатора кода",
	"python.command.python.enableLinting.title": "Включить или отключить анализ кода",
	"python.command.python.runLinting.title": "Запустить анализ кода",
	"python.command.python.enableSourceMapSupport.title": "Включить поддержку сопоставителя с исходным кодом для отладки расширений",
	"python.command.python.clearCacheAndReload.title": "Очистить внутренний кэш и перезагрузить окно",
	"python.command.python.analysis.restartLanguageServer.title": "Перезапустить языковой сервер",
	"python.command.python.launchTensorBoard.title": "Запустить Tensorboard",
	"python.command.python.refreshTensorBoard.title": "Обновить TensorBoard",
	"python.menu.createNewFile.title": "Файл Python",
	"python.autoComplete.extraPaths.description": "Список путей к библиотекам и подобным ресурсам, которые необходимо импортировать с помощью подсистемы автозаполнения. Например, при использовании пакета SDK Google App пути не указаны в системном пути, поэтому их необходимо добавить в этот список.",
	"python.condaPath.description": "Путь к исполняемому файлу Conda, используемому для активации (версия 4.4 и более поздние).",
	"python.defaultInterpreterPath.description": "Путь к каталогу Python по умолчанию, используемый при первой загрузке расширения, больше не используется после выбора интерпретатора для рабочей области. См. https://aka.ms/AAfekmf, чтобы узнать, когда он используется",
	"python.diagnostics.sourceMapsEnabled.description": "Включение поддержки сопоставления исходного кода для значимых трассировок стека в журналах ошибок.",
	"python.envFile.description": "Абсолютный путь к файлу, содержащему определения переменных среды.",
	"python.experiments.enabled.description": "Включает эксперименты A/B-тестов в расширения Python. Если этот параметр включен, вас могут включить в предлагаемые улучшения и (или) функции.",
	"python.experiments.optInto.description": "Список экспериментов, в которых следует участвовать. Если список пуст, пользователю назначаются группы экспериментов по умолчанию. Дополнительные сведения: https://github.com/microsoft/vscode-python/wiki/Experiments.",
	"python.experiments.optOutFrom.description": "Список экспериментов, от которые требуется отказаться. Если список пуст, пользователю назначаются группы экспериментов по умолчанию. Дополнительные сведения: https://github.com/microsoft/vscode-python/wiki/Experiments.",
	"python.formatting.autopep8Args.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.formatting.autopep8Path.description": "Путь к autopep8. Можно использовать настраиваемую версию autopep8, изменяя этот параметр, чтобы включить полный путь.",
	"python.formatting.blackArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.formatting.blackPath.description": "Путь к Black, Можно использовать настраиваемую версию Black, изменяя этот параметр, чтобы включить полный путь.",
	"python.formatting.provider.description": "Поставщик для форматирования. Возможные варианты: autopep8, black и yapf.",
	"python.formatting.yapfArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.formatting.yapfPath.description": "Путь к yapf, Можно использовать настраиваемую версию yapf, изменяя этот параметр, чтобы включить полный путь.",
	"python.globalModuleInstallation.description": "Следует ли устанавливать модули Python глобально, если среда не используется.",
	"python.languageServer.description": "Определяет тип языкового сервера.",
	"python.languageServer.defaultDescription": "Автоматический выбор языкового сервера: Pylance, если он установлен и доступен, в противном случае откат к Jedi.",
	"python.languageServer.jediDescription": "Использование Jedi c протоколом LSP в качестве языкового сервера.",
	"python.languageServer.pylanceDescription": "Использование Pylance в качестве языкового сервера.",
	"python.languageServer.noneDescription": "Отключение возможностей языкового сервера.",
	"python.linting.banditArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.linting.banditEnabled.description": "Следует ли анализировать код файлов Python с помощью bandit.",
	"python.linting.banditPath.description": "Путь к bandit, Можно использовать настраиваемую версию bandit, изменяя этот параметр, чтобы включить полный путь.",
	"python.linting.cwd.description": "Необязательный рабочий каталог для анализаторов кода.",
	"python.linting.enabled.description": "Следует ли анализировать код файлов Python.",
	"python.linting.flake8Args.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.linting.flake8CategorySeverity.E.description": "Серьезность сообщения Flake8 типа \"E\".",
	"python.linting.flake8CategorySeverity.F.description": "Серьезность сообщения Flake8 типа \"F\".",
	"python.linting.flake8CategorySeverity.W.description": "Серьезность сообщения Flake8 типа \"W\".",
	"python.linting.flake8Enabled.description": "Следует ли анализировать код файлов Python с помощью Flake8.",
	"python.linting.flake8Path.description": "Путь к Flake8. Можно использовать настраиваемую версию Flake8, изменяя этот параметр, чтобы включить полный путь.",
	"python.linting.ignorePatterns.description": "Шаблоны, используемые для исключения файлов или папок из анализа кода.",
	"python.interpreter.infoVisibility.description": "Управляет отображением сведений о выбранном интерпретаторе в строке состояния.",
	"python.interpreter.infoVisibility.never.description": "Никогда не отображать сведения.",
	"python.interpreter.infoVisibility.onPythonRelated.description": "Отображать сведения, только если открыты файлы, связанные с Python.",
	"python.interpreter.infoVisibility.always.description": "Всегда отображать сведения.",
	"python.linting.lintOnSave.description": "Следует ли анализировать код файлов Python при сохранении.",
	"python.linting.maxNumberOfProblems.description": "Управляет максимальным числом проблем, вызванных сервером.",
	"python.linting.mypyArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.linting.mypyCategorySeverity.error.description": "Серьезность сообщения Mypy типа \"Error\".",
	"python.linting.mypyCategorySeverity.note.description": "Серьезность сообщения Mypy типа \"Note\".",
	"python.linting.mypyEnabled.description": "Следует ли анализировать код файлов Python с помощью Mypy.",
	"python.linting.mypyPath.description": "Путь к Mypy, Можно использовать настраиваемую версию Mypy, изменяя этот параметр, чтобы включить полный путь.",
	"python.linting.prospectorArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.linting.prospectorEnabled.description": "Следует ли анализировать код файлов Python с помощью prospector.",
	"python.linting.prospectorPath.description": "Путь к prospector. Можно использовать настраиваемую версию prospector, изменяя этот параметр, чтобы включить полный путь.",
	"python.linting.pycodestyleArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.linting.pycodestyleCategorySeverity.E.description": "Серьезность сообщения pycodestyle типа \"E\".",
	"python.linting.pycodestyleCategorySeverity.W.description": "Серьезность сообщения pycodestyle типа \"W\".",
	"python.linting.pycodestyleEnabled.description": "Следует ли анализировать код файлов Python с помощью pycodestyle.",
	"python.linting.pycodestylePath.description": "Путь к pycodestyle, Можно использовать настраиваемую версию pycodestyle, изменяя этот параметр, чтобы включить полный путь.",
	"python.linting.pydocstyleArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.linting.pydocstyleEnabled.description": "Следует ли анализировать код файлов Python с помощью pydocstyle.",
	"python.linting.pydocstylePath.description": "Путь к pydocstyle. Можно использовать настраиваемую версию pydocstyle, изменяя этот параметр, чтобы включить полный путь.",
	"python.linting.pylamaArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.linting.pylamaEnabled.description": "Следует ли анализировать код файлов Python с помощью pylama.",
	"python.linting.pylamaPath.description": "Путь к pylama, Можно использовать настраиваемую версию pylama, изменяя этот параметр, чтобы включить полный путь.",
	"python.linting.pylintArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.linting.pylintCategorySeverity.convention.description": "Серьезность сообщения Pylint типа \"Convention/C\".",
	"python.linting.pylintCategorySeverity.error.description": "Серьезность сообщения Pylint типа \"Error/E\".",
	"python.linting.pylintCategorySeverity.fatal.description": "Серьезность сообщения Pylint \"Error/F\".",
	"python.linting.pylintCategorySeverity.refactor.description": "Серьезность сообщения Pylint типа \"Refactor/R\".",
	"python.linting.pylintCategorySeverity.warning.description": "Серьезность сообщения Pylint типа \"Warning/W\".",
	"python.linting.pylintEnabled.description": "Следует ли анализировать код файлов Python с помощью Pylint.",
	"python.linting.pylintPath.description": "Путь к Pylint, Можно использовать настраиваемую версию Pylint, изменяя этот параметр, чтобы включить полный путь.",
	"python.logging.level.description": "Уровень ведения журнала для журналов расширения, значение по умолчанию — \"error\"",
	"python.pipenvPath.description": "Путь к исполняемому файлу pipenv, используемому для активации.",
	"python.poetryPath.description": "Путь к исполняемому файлу poetry.",
	"python.pylanceLspNotebooksEnabled.description": "Определяет, используется ли экспериментальная поддержка записных книжек LSP Pylance.",
	"python.sortImports.args.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.sortImports.path.description": "Путь к скрипту isort, по умолчанию с использованием внутренней версии",
	"python.tensorBoard.logDirectory.description": "Задайте в качестве этого параметра предпочитаемый каталог журнала TensorBoard для пропуск запроса каталога журнала при запуске TensorBoard.",
	"python.terminal.activateEnvInCurrentTerminal.description": "Активация среды Python в текущем терминале при загрузке расширения.",
	"python.terminal.activateEnvironment.description": "Активация Python в терминале, созданном с помощью расширения.",
	"python.terminal.executeInFileDir.description": "При выполнении файла в терминале следует ли делать это в каталоге файла, а не в текущей открытой папке.",
	"python.terminal.focusAfterLaunch.description": "Следует ли сосредоточиться переключить фокус на терминал при запуске процесса Python.",
	"python.terminal.launchArgs.description": "Аргументы запуска Python, которые будут использоваться при выполнении файла в терминале.",
	"python.testing.autoTestDiscoverOnSaveEnabled.description": "Включите обнаружение автоматических тестов при сохранении файла теста.",
	"python.testing.cwd.description": "Необязательный рабочий каталог для тестов.",
	"python.testing.debugPort.description": "Номер порта, используемый для отладки тестов.",
	"python.testing.promptToConfigure.description": "Запрос на настройку платформы тестирования при обнаружении потенциальных каталогов тестов.",
	"python.testing.pytestArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.testing.pytestEnabled.description": "Включить тестирование с помощью pytest.",
	"python.testing.pytestPath.description": "Путь к pytest (pytest). Можно использовать настраиваемую версию pytest, изменяя этот параметр, чтобы включить полный путь.",
	"python.testing.unittestArgs.description": "Аргументы переданы. Каждый аргумент является отдельным элементом в массиве.",
	"python.testing.unittestEnabled.description": "Включить тестирование с помощью unittest.",
	"python.venvFolders.description": "Папки в домашнем каталоге для поиска виртуальных сред (по умолчанию поддерживают pyenv, direnv и virtualenvwrapper).",
	"python.venvPath.description": "Путь к папке со списком виртуальных сред (например, ~/.pyenv, ~/Envs, ~/.virtualenvs)."
}