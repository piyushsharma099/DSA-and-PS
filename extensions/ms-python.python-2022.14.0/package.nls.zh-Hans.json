{
	"python.command.python.sortImports.title": "对导入进行排序",
	"python.command.python.startREPL.title": "启动 REPL",
	"python.command.python.createTerminal.title": "创建终端",
	"python.command.python.execInTerminal.title": "在终端中运行 Python 文件",
	"python.command.python.debugInTerminal.title": "调试 Python 文件",
	"python.command.python.execInTerminalIcon.title": "运行 Python 文件",
	"python.command.python.setInterpreter.title": "选择解释器",
	"python.command.python.clearWorkspaceInterpreter.title": "清除工作区解释器设置",
	"python.command.python.viewOutput.title": "显示输出",
	"python.command.python.viewLanguageServerOutput.title": "显示语言服务器输出",
	"python.command.python.configureTests.title": "配置测试",
	"python.command.testing.rerunFailedTests.title": "重新运行失败的测试",
	"python.command.python.execSelectionInTerminal.title": "在 Python 终端中运行选择/行",
	"python.command.python.execSelectionInDjangoShell.title": "在 Django Shell 中运行选择/行",
	"python.command.python.goToPythonObject.title": "转到 Python 对象",
	"python.command.python.reportIssue.title": "报告问题…",
	"python.command.python.setLinter.title": "选择 Linter",
	"python.command.python.enableLinting.title": "启用/禁用 Linting",
	"python.command.python.runLinting.title": "运行 Linting",
	"python.command.python.enableSourceMapSupport.title": "为扩展调试启用源映射支持",
	"python.command.python.clearCacheAndReload.title": "清除内部缓存和重新加载窗口",
	"python.command.python.analysis.restartLanguageServer.title": "重启语言服务器",
	"python.command.python.launchTensorBoard.title": "启动 Tensorboard",
	"python.command.python.refreshTensorBoard.title": "刷新 TensorBoard",
	"python.menu.createNewFile.title": "Python 文件",
	"python.autoComplete.extraPaths.description": "需要由自动完成引擎导入的库路径列表等。例如，使用 Google App SDK 时，路径不在系统路径中，因此需要添加到此列表中。",
	"python.condaPath.description": "要用于激活的 conda 可执行文件的路径(版本 4.4+)。",
	"python.defaultInterpreterPath.description": "第一次加载扩展时要使用的默认 Python 路径，在为工作区选择解释器后不再使用。请参阅 https://aka.ms/AAfekmf 了解何时使用此内容",
	"python.diagnostics.sourceMapsEnabled.description": "为错误日志中有意义的堆栈跟踪启用源映射支持。",
	"python.envFile.description": "包含环境变量定义的文件的绝对路径。",
	"python.experiments.enabled.description": "在 Python 扩展中启用 A/B 测试试验。如果启用，则可能会包括在建议的增强功能和/或功能中。",
	"python.experiments.optInto.description": "要选择加入的试验列表。如果为空，则为用户分配默认试验组。有关更多详细信息，请参阅 https://github.com/microsoft/vscode-python/wiki/Experiments。",
	"python.experiments.optOutFrom.description": "要选择退出的试验列表。如果为空，则为用户分配默认试验组。有关更多详细信息，请参阅 https://github.com/microsoft/vscode-python/wiki/Experiments。",
	"python.formatting.autopep8Args.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.formatting.autopep8Path.description": "autopep8 的路径，可以通过修改此设置以包含完整路径来使用 autopep8 的自定义版本。",
	"python.formatting.blackArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.formatting.blackPath.description": "路径为 Black，可以通过修改此设置以包含完整路径来使用自定义版本的 Black。",
	"python.formatting.provider.description": "格式设置提供程序。可能的选项包括 \"utopep8\"、\"black\" 和 \"yapf\"。",
	"python.formatting.yapfArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.formatting.yapfPath.description": "yapf 的路径，可以通过修改此设置以包含完整路径来使用自定义版本的 yapf。",
	"python.globalModuleInstallation.description": "不使用环境时是否全局安装 Python 模块。",
	"python.languageServer.description": "定义语言服务器的类型。",
	"python.languageServer.defaultDescription": "自动选择语言服务器: 如果已安装且可用，则为 Pylance，否则回退到 Jedi。",
	"python.languageServer.jediDescription": "将语言服务器协议 (LSP) 背后的 Jedi 用作语言服务器。",
	"python.languageServer.pylanceDescription": "将 Pylance 用作语言服务器。",
	"python.languageServer.noneDescription": "禁用语言服务器功能。",
	"python.linting.banditArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.linting.banditEnabled.description": "是否使用强盗对 Python 文件进行 lint 处理。",
	"python.linting.banditPath.description": "强盗路径，可以通过修改此设置以包含完整路径来使用自定义版本的强盗。",
	"python.linting.cwd.description": "linters 的可选工作目录。",
	"python.linting.enabled.description": "是否对 Python 文件进行 lint 处理。",
	"python.linting.flake8Args.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.linting.flake8CategorySeverity.E.description": "Flake8 消息类型 \"E\" 的严重性。",
	"python.linting.flake8CategorySeverity.F.description": "Flake8 消息类型 \"F\" 的严重性。",
	"python.linting.flake8CategorySeverity.W.description": "Flake8 消息类型 \"W\" 的严重性。",
	"python.linting.flake8Enabled.description": "是否使用 flake8 对 Python 文件进行 lint 处理。",
	"python.linting.flake8Path.description": "flake8 的路径，可以通过修改此设置以包含完整路径来使用自定义版本的 flake8。",
	"python.linting.ignorePatterns.description": "用于排除文件或文件夹的模式。",
	"python.interpreter.infoVisibility.description": "控制何时在状态栏中显示所选解释器的信息。",
	"python.interpreter.infoVisibility.never.description": "从不显示信息。",
	"python.interpreter.infoVisibility.onPythonRelated.description": "仅在打开与 Python 相关的文件时显示信息。",
	"python.interpreter.infoVisibility.always.description": "始终显示信息。",
	"python.linting.lintOnSave.description": "是否在保存时对 Python 文件进行 lint 处理。",
	"python.linting.maxNumberOfProblems.description": "控制服务器产生的最大问题数。",
	"python.linting.mypyArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.linting.mypyCategorySeverity.error.description": "Mypy 消息类型 \"Error\" 的严重性。",
	"python.linting.mypyCategorySeverity.note.description": "Mypy 邮件类型“注意”的严重性。",
	"python.linting.mypyEnabled.description": "是否使用 mypy 对 Python 文件进行 lint 处理。",
	"python.linting.mypyPath.description": "mypy 的路径，可以通过修改此设置以包含完整路径来使用自定义版本的 mypy。",
	"python.linting.prospectorArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.linting.prospectorEnabled.description": "是否使用探查器对 Python 文件进行 lint 处理。",
	"python.linting.prospectorPath.description": "“探查器”路径，可以通过修改此设置以包含完整路径来使用自定义版本的探查器。",
	"python.linting.pycodestyleArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.linting.pycodestyleCategorySeverity.E.description": "pycodestyle 消息类型 \"E\" 的严重性。",
	"python.linting.pycodestyleCategorySeverity.W.description": "pycodestyle 消息类型 \"W\" 的严重性。",
	"python.linting.pycodestyleEnabled.description": "是否使用 pycodestyle 对 Python 文件进行 lint 处理。",
	"python.linting.pycodestylePath.description": "pycodestyle 路径，可以通过修改此设置以包含完整路径来使用自定义版本的 pycodestyle。",
	"python.linting.pydocstyleArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.linting.pydocstyleEnabled.description": "是否使用 pydocstyle 对 Python 文件进行 lint 处理。",
	"python.linting.pydocstylePath.description": "pydocstyle 的路径，可以通过修改此设置以包含完整路径来使用自定义版本的 pydocstyle。",
	"python.linting.pylamaArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.linting.pylamaEnabled.description": "是否使用 pylama 对 Python 文件进行 lint 处理。",
	"python.linting.pylamaPath.description": "pylama 的路径，可以通过修改此设置以包含完整路径来使用自定义版本的 pylama。",
	"python.linting.pylintArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.linting.pylintCategorySeverity.convention.description": "Pylint 消息类型 \"Convention/C\" 的严重性。",
	"python.linting.pylintCategorySeverity.error.description": "Pylint 消息类型 \"Error/E\" 的严重性。",
	"python.linting.pylintCategorySeverity.fatal.description": "Pylint 消息类型 \"Error/F\" 的严重性。",
	"python.linting.pylintCategorySeverity.refactor.description": "Pylint 消息类型 \"Refactor/R\" 的严重性。",
	"python.linting.pylintCategorySeverity.warning.description": "Pylint 消息类型 \"Warning/W\" 的严重性。",
	"python.linting.pylintEnabled.description": "是否使用 pylint 对 Python 文件进行 lint 处理。",
	"python.linting.pylintPath.description": "Pylint 路径，可以通过修改此设置以包含完整路径来使用自定义版本的 pylint。",
	"python.logging.level.description": "扩展日志的日志记录级别，默认为 \"error\"",
	"python.pipenvPath.description": "要用于激活的 pipenv 可执行文件的路径。",
	"python.poetryPath.description": "要执行的可执行文件的路径。",
	"python.pylanceLspNotebooksEnabled.description": "确定是否使用 Pylance 的实验性 LSP 笔记本支持。",
	"python.sortImports.args.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.sortImports.path.description": "isort 脚本的路径，默认使用内部版本",
	"python.tensorBoard.logDirectory.description": "将此设置设置为首选 TensorBoard 日志目录，以便在启动 TensorBoard 时跳过日志目录提示。",
	"python.terminal.activateEnvInCurrentTerminal.description": "加载扩展时，在当前终端中激活 Python 环境。",
	"python.terminal.activateEnvironment.description": "在终端中激活使用扩展创建的 Python 环境。",
	"python.terminal.executeInFileDir.description": "在终端中执行文件时，是否在文件的目录中使用 execute，而不是当前打开的文件夹。",
	"python.terminal.focusAfterLaunch.description": "启动 python 进程时，是否将焦点放在终端上。",
	"python.terminal.launchArgs.description": "Python 启动在终端中执行文件时要使用的参数。",
	"python.testing.autoTestDiscoverOnSaveEnabled.description": "保存测试文件时启用自动运行测试发现。",
	"python.testing.cwd.description": "用于测试的可选工作目录。",
	"python.testing.debugPort.description": "用于调试测试的端口号。",
	"python.testing.promptToConfigure.description": "如果发现潜在的测试目录，则提示配置测试框架。",
	"python.testing.pytestArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.testing.pytestEnabled.description": "使用 pytest 启用测试。",
	"python.testing.pytestPath.description": "pytest (pytest) 的路径，可以通过修改此设置以包含完整路径来使用自定义版本的 pytest。",
	"python.testing.unittestArgs.description": "传入的参数。每个参数都是数组中的一个单独项。",
	"python.testing.unittestEnabled.description": "使用 unittest 启用测试。",
	"python.venvFolders.description": "要查找虚拟环境的主目录中的文件夹(默认支持 pyenv、direnv 和 virtualenvwrapper)。",
	"python.venvPath.description": "包含虚拟环境列表的文件夹的路径(例如 ~/.pyenv、~/Envs、~/.virtualenvs)。"
}