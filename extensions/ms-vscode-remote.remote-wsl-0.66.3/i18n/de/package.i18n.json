/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"displayName": "Remote – WSL",
	"description": "Öffnen Sie einen beliebigen Ordner im Windows-Subsystem für Linux (WSL), und nutzen Sie den vollständigen Featuresatz von Visual Studio Code.",
	"indicator.workspaceSuffix": "WSL",
	"settings.remote.WSL.fileWatcher.polling": "Wenn diese Einstellung festgelegt ist, wird der Abruf für die Dateibeobachtung in WSL1 verwendet. Das Abrufen kann CPU-intensiv sein, behebt aber das WSL1-Problem, dass Ordner beim Beobachten nicht umbenannt werden können. Diese Option erfordert einen Neustart, um wirksam zu werden.",
	"settings.remote.WSL.fileWatcher.pollingInterval": "Das Abrufintervall der Dateibeobachtung in Millisekunden, das in WSL1-Distributionen verwendet wird, wenn „remote.WSL.fileWatcher.polling“ festgelegt ist.\r\nDiese Option erfordert einen Neustart, um wirksam zu werden.",
	"settings.remote.WSL.debug": "Wenn diese Einstellung festgelegt ist, zeigt die Ausgabe im WSL-Protokoll Debuginformationen an.",
	"settings.remote.WSL.useShellEnvironment": "Wenn diese Einstellung festgelegt ist, ruft das WSL-Fenster die Umgebung aus der Shell ab, aus der es geöffnet wurde.",
	"settings.remote.WSL.server.connectThroughLocalhost": "Wenn diese Einstellung festgelegt ist, wird für die Verbindung mit einem VS Code-Server, der in WSL2 ausgeführt wird, localhost (::1) verwendet. Wenn dies nicht festgelegt ist, verwendet die Verbindung direkt die IP-Adressen der WSL2-VM, wenn auf sie zugegriffen werden kann, oder andernfalls localhost.",
	"settings.remote.WSL.server.connectThroughLocalhost.deprecationMessage": "Verwenden Sie stattdessen „remote.WSL2.connectionMethod“.",
	"settings.remote.WSL.server.connectThroughLocalhost.markdownDeprecationMessage": "Verwenden Sie stattdessen „remote.WSL2.connectionMethod“.",
	"settings.remote.WSL1.connectionMethod": "Gibt an, wie Remote – WSL eine Verbindung mit dem VS Code-Server herstellt, der in WSL1-Distributionen ausgeführt wird. Diese Option erfordert einen Neustart, um wirksam zu werden.",
	"settings.remote.WSL1.connectionMethod.localhost": "Stellt eine Verbindung mit dem Server in WSL über 127.0.0.1 her, welche von Windows und WSL1 gemeinsam genutzt wird.",
	"settings.remote.WSL1.connectionMethod.wslExeProxy": "Stellt über einen lokalen Proxyserver, der „wsl.exe“ zum Weiterleiten der Verbindung an WSL verwendet, eine Verbindung mit dem Server in WSL her.",
	"settings.remote.WSL2.connectionMethod": "Gibt an, wie Remote – WSL eine Verbindung mit dem VS Code-Server herstellt, der in WSL2-Distributionen ausgeführt wird. Diese Option erfordert einen Neustart, um wirksam zu werden.",
	"settings.remote.WSL2.connectionMethod.localhost": "Stellt eine Verbindung mit dem Server in WSL über localhost (::1) her, der von Windows an die WSL2-VM weitergeleitet wird.",
	"settings.remote.WSL2.connectionMethod.wsl2VMAddress": "Stellt über die IP-Adresse der WSL2-VM eine Verbindung mit dem Server in WSL her.",
	"settings.remote.WSL2.connectionMethod.wslExeProxy": "Stellt über einen lokalen Proxyserver, der „wsl.exe“ zum Weiterleiten der Verbindung an WSL verwendet, eine Verbindung mit dem Server in WSL her.",
	"walkthrough.title": "Erste Schritte mit Remote – WSL",
	"walkthrough.exploreCommands.title": "Erste Schritte mit Remote – WSL",
	"walkthrough.exploreCommands.description": "Remote – WSL fügt VS Code mehrere Befehle hinzu. \r\nSie können sie aufrufen, indem Sie „F1“ drücken, um die Befehlspalette zu öffnen und „Remote – WSL“ eintippen. \r\nSie können den Satz von Remotebefehlen auch über den grünen Remoteindikator links unten in VS Code öffnen. \r\n[Öffnen des Remotemenüs](command:workbench.action.remote.showMenu)",
	"walkthrough.exploreCommands.imageAltText": "Ein Bild von Remote – WSL-Befehlen.",
	"walkthrough.openWindow.title": "Öffnen eines Remote – WSL-Fensters",
	"walkthrough.openWindow.description": "Stellen Sie eine Verbindung mit einer Distribution in einem Remote – WSL-Fenster her, in dem Ihr Linux-Code auf einem lokalen Server ausgeführt wird, um Remote – WSL zu nutzen. \r\n Sie können auch mit den nächsten Schritten der WSL-Erfahrung „Erste Schritte“ fortfahren! \r\n[Neues WSL-Fenster](command:remote-wsl.newWindow)",
	"walkthrough.openWindow.imageAltText": "Eine Abbildung eines neuen Remote – WSL-Fensters.",
	"walkthrough.createProject.title": "Neu bei WSL? Erstellen Sie einen Projektordner.",
	"walkthrough.createProject.description": "WSL verfügt über sein eigenes Dateisystem mit Vorteilen bezüglich [Leistung](https://docs.microsoft.com/windows/wsl/compare-versions#performance-across-os-file-systems) für die Erstellung und den Zugriff auf Ihre Projekte. \r\nIn VS Code können Sie Remote – WSL verwenden, um dieses Projekt zu öffnen und zu bearbeiten. \r\n[Weitere Informationen](https://code.visualstudio.com/docs/remote/wsl-tutorial) zum Erstellen Ihrer ersten App in WSL. \r\n[Erstellen einer neuen Datei im WSL-Dateisystem](command:explorer.newFile)",
	"walkthrough.openProject.title": "Haben Sie ein Projekt? Öffnen Sie es in WSL.",
	"walkthrough.openProject.description": "Sobald sich ein Projekt im WSL-Dateisystem befindet, können Sie es direkt in VS Code öffnen. \r\n[Öffnen Sie den Ordner in WSL](command:remote-wsl.openFolder)",
	"walkthrough.linuxEnv.title": "Eine echte Linux-Umgebung",
	"walkthrough.linuxEnv.description": "Remote – WSL führt Befehle auf einem echten Linux-Kernel aus. \r\nDurch das Ausführen von „uname“ in einem Remote – WSL-Terminal wird angezeigt, dass Sie sich in einer Linux-Umgebung befinden. \r\n[Öffnen Sie ein Terminal, und testen Sie Linux-Befehle aus](command:workbench.action.terminal.focus)",
	"walkthrough.linuxEnv.imageAltText": "WSL-Terminal zeigt den Befehl „uname“",
	"walkthrough.installTools.title": "Tools installieren",
	"walkthrough.installTools.description": "Um umfassende Bearbeitungs- und Debuggenerfahrungen zu erhalten, installieren Sie die Sprachen, Toolsets und VS Code-Erweiterungen für Ihr Projekt in WSL. \r\n[Installieren von Erweiterungen in WSL](command:workbench.view.extensions)",
	"walkthrough.runDebug.title": "Ausführen und Debuggen",
	"walkthrough.runDebug.description": "Remote – WSL erleichtert das Ausführen und Debuggen Ihrer Linux-Apps. \r\nVerwenden Sie die Ansicht „Ausführen und Debuggen“ oder „F5“, um Ihre App auszuführen. Sie können Haltepunkte festlegen, Variablen untersuchen und in der Aufrufliste navigieren. \r\n[Öffnen der Ansicht „Ausführen und Debuggen“](command:workbench.view.debug)",
	"walkthrough.runDebug.imageAltText": "Debuggen in einer Remote – WSL-Sitzung",
	"walkthrough.comeBack.title": "Kehren Sie jederzeit zurück",
	"walkthrough.comeBack.description": "Sie können jederzeit problemlos zu einer Remote – WSL-Sitzung in VS Code zurückkehren, indem Sie „code .“ in einem WSL-Terminal ausführen.\r\n VS Code wird automatisch gestartet und mit Remote – WSL verbunden.",
	"walkthrough.comeBack.imageAltText": "Externes Terminal, das den Befehl „code .“ ausführt",
	"command.newWindow": "Neues WSL-Fenster",
	"command.newWSLWindow": "Neues WSL-Fenster",
	"command.openFolder": "Ordner in WSL öffnen...",
	"command.newWindowForDistro": "Neues WSL-Fenster mittels Distribution...",
	"command.newWindowFromRecommendation": "Neues WSL-Fenster mittels Distribution...",
	"command.reopenInWSL": "Ordner in WSL erneut öffnen",
	"command.explorer.openFolder": "Ordner in WSL öffnen",
	"command.reopenInWindows": "Ordner in Windows erneut öffnen",
	"command.showLog": "Protokoll anzeigen",
	"command.getHelp": "Hilfe",
	"command.getStarted": "Erste Schritte mit WSL",
	"command.provideFeedback": "Feedback bereitstellen",
	"command.reportIssue": "Problem melden...",
	"command.explorer.removeFolder": "Zuletzt verwendeten Ordner entfernen",
	"command.explorer.openDistro": "Herstellen einer Verbindung mit WSL",
	"command.explorer.setDefaultDistro": "Als Standarddistribution festlegen",
	"command.explorer.refresh": "Aktualisieren",
	"command.explorer.addDistro": "Hinzufügen einer Distribution",
	"command.revealInExplorer": "Im Explorer aufdecken",
	"remoteView.name": "WSL-Ziele",
	"welcome.installWsl": "Los geht‘s mit WSL, indem Sie das Windows-Subsystem für Linux installieren oder die [Hilfeansicht](command:~remote.helpPanel.focus) aufrufen.",
	"welcome.installDistro": "Beginnen Sie mit WSL, indem Sie eine Distribution hinzufügen.\r\n[Distribution hinzufügen](command:remote-wsl.explorer.addDistro)."
}