/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"displayName": "Remote - WSL",
	"description": "打开适用于 Linux 的 Windows 子系统(WSL)中的任何文件夹，并利用 Visual Studio Code 的完整功能集。",
	"indicator.workspaceSuffix": "WSL",
	"settings.remote.WSL.fileWatcher.polling": "如果已设置，则轮询会用于在 WSL1 中监视文件。轮询可能占用大量 CPU，但可修复 WSL1 问题，即在监视时无法重命名文件夹。此选项需要重启才能生效。",
	"settings.remote.WSL.fileWatcher.pollingInterval": "WSL1 发行版中使用的文件观察程序轮询间隔(以毫秒为单位)(如果已设置了 `remote.WSL.fileWatcher.polling`)。\r\n此选项需要重启才能生效。",
	"settings.remote.WSL.debug": "如果已设置，WSL 日志中的输出将显示调试信息。",
	"settings.remote.WSL.useShellEnvironment": "如果已设置，WSL 窗口将从它打开的 shell 中获取环境。",
	"settings.remote.WSL.server.connectThroughLocalhost": "如果已设置，则与在 WSL2 中运行的 VS Code 服务器的连接将使用 localhost (::1)。如果未设置，连接将直接使用 WSL2 VM 的 IP 地址(如果可访问)或 localhost (如果不可访问)。",
	"settings.remote.WSL.server.connectThroughLocalhost.deprecationMessage": "改为使用 \\\"remote.WSL2.connectionMethod\\\"。",
	"settings.remote.WSL.server.connectThroughLocalhost.markdownDeprecationMessage": "改为使用 `remote.WSL2.connectionMethod`。",
	"settings.remote.WSL1.connectionMethod": "指定 Remote - WSL 如何连接到在 WSL1 发行版中运行的 VS Code 服务器。此选项需要重启才能生效。",
	"settings.remote.WSL1.connectionMethod.localhost": "通过在 Windows 和 WSL1 之间共享的 127.0.0.1 连接到 WSL 中的服务器。",
	"settings.remote.WSL1.connectionMethod.wslExeProxy": "通过使用 \\\"wsl.exe\\\" 的本地代理服务器连接到 WSL 中的服务器，从而将连接转发到 WSL。",
	"settings.remote.WSL2.connectionMethod": "指定 Remote - WSL 如何连接到在 WSL2 发行版中运行的 VS Code 服务器。此选项需要重启才能生效。",
	"settings.remote.WSL2.connectionMethod.localhost": "通过 localhost (::1)连接到 WSL 中的服务器，连接会由 Windows 转发到 WSL2 VM。",
	"settings.remote.WSL2.connectionMethod.wsl2VMAddress": "通过 WSL2 VM 的 IP 地址连接到 WSL 中的服务器。",
	"settings.remote.WSL2.connectionMethod.wslExeProxy": "通过使用 \\\"wsl.exe\\\" 的本地代理服务器连接到 WSL 中的服务器，从而将连接转发到 WSL。",
	"walkthrough.title": "Remote - WSL 入门",
	"walkthrough.exploreCommands.title": "Remote - WSL 入门",
	"walkthrough.exploreCommands.description": "Remote - WSL 可向 VS Code 添加多个命令。\r\n可以按\\\"F1\\\" 打开命令面板并键入 \\\"Remote-WSL\\\" 来显示它们。\r\n还可以通过 VS Code 左下角的绿色远程指示器打开远程命令集。\r\n[打开远程菜单](command:workbench.action.remote.showMenu)",
	"walkthrough.exploreCommands.imageAltText": "Remote - WSL 命令的图像。",
	"walkthrough.openWindow.title": "打开 Remote - WSL 窗口",
	"walkthrough.openWindow.description": "若要利用 Remote - WSL 的优势，请连接到 Remote - WSL 窗口中的发行版，Linux 代码将在本地服务器上运行。\r\n你还可以继续执行 WSL 入门体验的后续步骤! \r\n[新建 WSL 窗口](command:remote-wsl.newWindow)",
	"walkthrough.openWindow.imageAltText": "新 Remote - WSL 窗口的图像。",
	"walkthrough.createProject.title": "不熟悉 WSL? 创建一个项目文件夹。",
	"walkthrough.createProject.description": "WSL 有自己的文件系统，具有创建和访问项目的[性能](https://docs.microsoft.com/windows/wsl/compare-versions#performance-across-os-file-systems)优势。\r\n在 VS Code 中，可以使用 Remote - WSL 打开和编辑此项目。\r\n[了解如何使用](https://code.visualstudio.com/docs/remote/wsl-tutorial)在 WSL 中创建第一个应用。\r\n[在 WSL 文件系统中创建新文件](command:explorer.newFile)",
	"walkthrough.openProject.title": "已有项目? 在 WSL 中打开它。",
	"walkthrough.openProject.description": "在 WSL 文件系统中有项目后，可以直接在 VS Code 中打开它。\r\n[在 WSL 中打开文件夹](command:remote-wsl.openFolder)",
	"walkthrough.linuxEnv.title": "真正的 Linux 环境",
	"walkthrough.linuxEnv.description": "Remote - WSL 使用真实的 Linux 内核运行命令。\r\n在 Remote–WSL 中运行 \\\"uname\\\" 终端后，将显示你处于 Linux 环境中。\r\n[打开终端并试用 Linux 命令](command:workbench.action.terminal.focus)",
	"walkthrough.linuxEnv.imageAltText": "显示 uname 命令的 WSL 终端",
	"walkthrough.installTools.title": "安装工具",
	"walkthrough.installTools.description": "若要获得丰富的编辑和调试体验，请在 WSL 中安装项目的语言、工具集、VS Code 扩展。\r\n[在 WSL 中安装扩展](command:workbench.view.extensions)",
	"walkthrough.runDebug.title": "运行和调试",
	"walkthrough.runDebug.description": "Remote - WSL 可让你轻松运行和调试 Linux 应用。\r\n使用运行和调试视图或 \\\"F5\\\" 运行应用。可以设置断点、检查变量并浏览调用堆栈。\r\n[打开运行和调试视图](command:workbench.view.debug)",
	"walkthrough.runDebug.imageAltText": "在 Remote-WSL 会话中调试",
	"walkthrough.comeBack.title": "随时返回",
	"walkthrough.comeBack.description": "在 WSL 终端中执行 ``code .`` 后，你可以随时轻松返回到 VS Code Remote - WSL 会话。\r\n VS Code 会自动启动并连接到 Remote - WSL。",
	"walkthrough.comeBack.imageAltText": "运行代码 {0} 的外部终端。命令",
	"command.newWindow": "新建 WSL 窗口",
	"command.newWSLWindow": "新建 WSL 窗口",
	"command.openFolder": "在 WSL 中打开文件夹...",
	"command.newWindowForDistro": "使用发行版新建 WSL 窗口...",
	"command.newWindowFromRecommendation": "使用发行版新建 WSL 窗口...",
	"command.reopenInWSL": "在 WSL 中重新打开文件夹",
	"command.explorer.openFolder": "在 WSL 中打开文件夹",
	"command.reopenInWindows": "在 Windows 中重新打开文件夹",
	"command.showLog": "显示日志",
	"command.getHelp": "帮助",
	"command.getStarted": "WSL 入门",
	"command.provideFeedback": "提供反馈",
	"command.reportIssue": "报告问题...",
	"command.explorer.removeFolder": "删除最近使用的文件夹",
	"command.explorer.openDistro": "连接到 WSL",
	"command.explorer.setDefaultDistro": "设置为默认发行版",
	"command.explorer.refresh": "刷新",
	"command.explorer.addDistro": "添加发行版",
	"command.revealInExplorer": "在资源管理器中显示",
	"remoteView.name": "WSL 目标",
	"welcome.installWsl": "安装适用于 Linux 的 Windows 子系统或访问[帮助视图](command:~remote.helpPanel.focus)以开始使用 WSL。",
	"welcome.installDistro": "添加发行版以开始。\r\n[添加发行版](command:remote-wsl.explorer.addDistro)"
}