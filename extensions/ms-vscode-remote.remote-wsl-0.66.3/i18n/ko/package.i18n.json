/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"displayName": "원격 - WSL",
	"description": "Linux용 Windows 하위 시스템(WSL)에서 폴더를 열고 Visual Studio Code의 전체 기능 집합을 활용하세요.",
	"indicator.workspaceSuffix": "WSL",
	"settings.remote.WSL.fileWatcher.polling": "설정된 경우 폴링이 WSL1 내에서 파일을 감시하는 데 사용됩니다. 폴링은 CPU를 많이 사용하지만 감시 중 폴더의 이름을 바꿀 수 없는 WSL1 문제를 해결합니다. 이 옵션을 적용하려면 다시 시작해야 합니다.",
	"settings.remote.WSL.fileWatcher.pollingInterval": "`remote.WSL.fileWatcher.polling`이 설정된 경우 WSL1 배포판 내에서 사용되는 파일 감시자 폴링 간격(밀리초)입니다.\r\n이 옵션을 적용하려면 다시 시작해야 합니다.",
	"settings.remote.WSL.debug": "설정된 경우 WSL 로그의 출력에 디버그 정보가 표시됩니다.",
	"settings.remote.WSL.useShellEnvironment": "설정된 경우 WSL 창이 창을 열었던 셸에서 환경을 가져옵니다.",
	"settings.remote.WSL.server.connectThroughLocalhost": "설정된 경우 WSL2에서 실행 중인 VS Code 서버에 대한 연결에서 localhost(::1)를 사용합니다. 설정되지 않은 경우 연결에서 WSL2 VM의 IP 주소를 직접 사용하거나(액세스 가능한 경우) localhost를 사용합니다(액세스 불가능한 경우).",
	"settings.remote.WSL.server.connectThroughLocalhost.deprecationMessage": "'remote.WSL2.connectionMethod'를 대신 사용합니다.",
	"settings.remote.WSL.server.connectThroughLocalhost.markdownDeprecationMessage": "`remote.WSL2.connectionMethod`를 대신 사용합니다.",
	"settings.remote.WSL1.connectionMethod": "원격 - WSL이 WSL1 배포판에서 실행되는 VS Code 서버에 연결하는 방법을 지정합니다. 이 옵션을 적용하려면 다시 시작해야 합니다.",
	"settings.remote.WSL1.connectionMethod.localhost": "Windows 및 WSL1 간에 공유되고 있는 127.0.0.1을 통해 WSL의 서버에 연결합니다.",
	"settings.remote.WSL1.connectionMethod.wslExeProxy": "'wsl.exe'를 사용하여 WSL로 연결을 전달하는 로컬 프록시 서버를 통해 WSL의 서버에 연결합니다.",
	"settings.remote.WSL2.connectionMethod": "원격 - WSL이 WSL2 배포판에서 실행되는 VS Code 서버에 연결하는 방법을 지정합니다. 이 옵션을 적용하려면 다시 시작해야 합니다.",
	"settings.remote.WSL2.connectionMethod.localhost": "Windows의 WSL2 VM으로 전달되는 localhost(::1)를 통해 WSL의 서버에 연결합니다.",
	"settings.remote.WSL2.connectionMethod.wsl2VMAddress": "WSL2 VM의 IP 주소를 통해 WSL의 서버에 연결합니다.",
	"settings.remote.WSL2.connectionMethod.wslExeProxy": "'wsl.exe'를 사용하여 WSL로 연결을 전달하는 로컬 프록시 서버를 통해 WSL의 서버에 연결합니다.",
	"walkthrough.title": "원격 시작하기 - WSL",
	"walkthrough.exploreCommands.title": "원격 시작하기 - WSL",
	"walkthrough.exploreCommands.description": "원격 - WSL은 VS Code에 여러 명령을 추가합니다. \r\n``F1``을 눌러 명령 팔레트를 열고 \"Remote-WSL\"을 입력하여 표시할 수 있습니다. \r\nVS Code 왼쪽 아래에 있는 녹색 원격 표시기를 통해 원격 명령 집합을 열 수도 있습니다. \r\n[원격 메뉴 열기](command:workbench.action.remote.showMenu)",
	"walkthrough.exploreCommands.imageAltText": "원격 - WSL 명령의 이미지입니다.",
	"walkthrough.openWindow.title": "원격 - WSL 창 열기",
	"walkthrough.openWindow.description": "원격 - WSL을 활용하려면 Linux 코드가 로컬 서버에서 실행될 원격 - WSL 창에서 배포판에 연결합니다. \r\n WSL 시작하기 환경의 다음 단계를 계속할 수도 있습니다. \r\n[새 WSL 창](command:remote-wsl.newWindow)",
	"walkthrough.openWindow.imageAltText": "새 원격 - WSL 창의 이미지입니다.",
	"walkthrough.createProject.title": "WSL이 처음이신가요? 프로젝트 폴더를 만드세요.",
	"walkthrough.createProject.description": "WSL에는 프로젝트 생성 및 액세스에 대한 [성능](https://docs.microsoft.com/windows/wsl/compare-versions#performance-across-os-file-systems) 이점이 있는 자체 파일 시스템이 있습니다. \r\nVS Code에서 원격 - WSL을 사용하여 이 프로젝트를 열고 수정할 수 있습니다. \r\n[자세히 알아보기](https://code.visualstudio.com/docs/remote/wsl-tutorial) WSL 내에서 첫 번째 앱을 생성합니다. \r\n[WSL 파일 시스템에서 새 파일 만들기](command:explorer.newFile)",
	"walkthrough.openProject.title": "프로젝트가 있습니까? WSL에서 여세요.",
	"walkthrough.openProject.description": "WSL 파일 시스템에 프로젝트가 있으면 VS Code에서 직접 열 수 있습니다. \r\n[WSL에서 폴더 열기](command:remote-wsl.openFolder)",
	"walkthrough.linuxEnv.title": "실제 Linux 환경",
	"walkthrough.linuxEnv.description": "원격 - WSL은 실제 Linux 커널을 사용하여 명령을 실행합니다. \r\n원격 - WSL 터미널에서 ``uname``을 실행하면 Linux 환경에 있음을 알 수 있습니다. \r\n[터미널을 열고 Linux 명령 시도](command:workbench.action.terminal.focus)",
	"walkthrough.linuxEnv.imageAltText": "uname 명령을 표시하는 WSL 터미널",
	"walkthrough.installTools.title": "도구 설치",
	"walkthrough.installTools.description": "풍부한 편집 및 디버깅 경험을 얻으려면 WSL에서 프로젝트에 대한 언어, 도구 집합 및 VS Code 확장을 설치하세요. \r\n[WSL에 확장 프로그램 설치](command:workbench.view.extensions)",
	"walkthrough.runDebug.title": "실행 및 디버그",
	"walkthrough.runDebug.description": "원격 - WSL을 사용하면 Linux 앱을 쉽게 실행하고 디버그할 수 있습니다. \r\n실행 및 디버그 보기 또는 ``F5``를 사용하여 앱을 실행합니다. 중단점을 설정하고, 변수를 검사하고, 호출 스택을 탐색할 수 있습니다. \r\n[실행 및 디버그 보기 열기](command:workbench.view.debug)",
	"walkthrough.runDebug.imageAltText": "원격 WSL 세션에서 디버깅",
	"walkthrough.comeBack.title": "언제든지 다시 시도",
	"walkthrough.comeBack.description": "WSL 터미널에서 ``code .``를 실행하면 언제든지 VS Code Remote - WSL 세션으로 쉽게 돌아갈 수 있습니다.\r\n VS Code는 Remote - WSL에 자동으로 연결되어 실행됩니다.",
	"walkthrough.comeBack.imageAltText": "코드를 실행하는 외부 터미널. 명령",
	"command.newWindow": "새 WSL 창",
	"command.newWSLWindow": "새 WSL 창",
	"command.openFolder": "WSL에서 폴더 열기...",
	"command.newWindowForDistro": "Distro를 사용하는 새 WSL 창...",
	"command.newWindowFromRecommendation": "Distro를 사용하는 새 WSL 창...",
	"command.reopenInWSL": "WSL에서 폴더 다시 열기",
	"command.explorer.openFolder": "WSL에서 폴더 열기",
	"command.reopenInWindows": "Windows에서 폴더 다시 열기",
	"command.showLog": "로그 표시",
	"command.getHelp": "도움말",
	"command.getStarted": "WSL 시작하기",
	"command.provideFeedback": "피드백 제공",
	"command.reportIssue": "문제 보고...",
	"command.explorer.removeFolder": "최근 폴더 제거",
	"command.explorer.openDistro": "WSL에 연결",
	"command.explorer.setDefaultDistro": "기본 배포판으로 설정",
	"command.explorer.refresh": "새로 고침",
	"command.explorer.addDistro": "배포판 추가",
	"command.revealInExplorer": "탐색기에 표시",
	"remoteView.name": "WSL 대상",
	"welcome.installWsl": "Linux용 Windows 하위 시스템을 설치하거나 [도움말 보기](command:~remote.helpPanel.focus)를 방문하여 WSL을 시작하세요.",
	"welcome.installDistro": "배포판을 추가하여 WSL을 시작하세요.\r\n[ 배포판 추가](command:remote-wsl.explorer.addDistro)"
}