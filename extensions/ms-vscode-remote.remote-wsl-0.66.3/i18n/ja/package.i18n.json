/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
// Do not edit this file. It is machine generated.
{
	"displayName": "リモート - WSL",
	"description": "Linux 用 Windows サブシステム (WSL) 内の任意のフォルダーを開き、Visual Studio Codeの完全な機能セットを利用します。",
	"indicator.workspaceSuffix": "WSL",
	"settings.remote.WSL.fileWatcher.polling": "設定されている場合、ポーリングは WSL1 内のファイル監視に使用されます。ポーリングは CPU を集中的に使用できますが、監視中にフォルダー名を変更できないという WSL1 の問題を修正します。このオプションを有効にするには再起動が必要です。",
	"settings.remote.WSL.fileWatcher.pollingInterval": "`remote.WSL.fileWatcher.polling` が設定されている場合、WSL1 ディストリビューション内で使用されるファイル ウォッチャーのポーリング間隔 (ミリ秒単位)。\r\nこのオプションを有効にするには再起動が必要です。",
	"settings.remote.WSL.debug": "設定されている場合、WSL ログの出力にデバッグ情報が表示されます。",
	"settings.remote.WSL.useShellEnvironment": "設定されている場合、WSL ウィンドウは、開かれたシェルから環境を取得します。",
	"settings.remote.WSL.server.connectThroughLocalhost": "設定されている場合、WSL2 で実行されている VS Code サーバーへの接続で localhost (::1) が使用されます。設定されていない場合、接続はアクセス可能な場合は WSL2 VM の IP アドレスを直接使用し、アクセスできない場合は localhost を使用します。",
	"settings.remote.WSL.server.connectThroughLocalhost.deprecationMessage": "代わりに 'remote.WSL2.connectionMethod' を使用します。",
	"settings.remote.WSL.server.connectThroughLocalhost.markdownDeprecationMessage": "代わりに `remote.WSL2.connectionMethod` を使用します。",
	"settings.remote.WSL1.connectionMethod": "リモート - WSL が WSL1 ディストリビューションで実行されているVS Code サーバーに接続する方法を指定します。このオプションを有効にするには再起動が必要です。",
	"settings.remote.WSL1.connectionMethod.localhost": "Windowsと WSL1 の間で共有されている 127.0.0.1 を介して、WSL のサーバーに接続します。",
	"settings.remote.WSL1.connectionMethod.wslExeProxy": "'wsl.exe' を使用して WSL に接続を転送するローカル プロキシ サーバーを介して WSL のサーバーに接続します。",
	"settings.remote.WSL2.connectionMethod": "リモート - WSL が WSL2 ディストリビューションで実行されているVS Code サーバーに接続する方法を指定します。このオプションを有効にするには再起動が必要です。",
	"settings.remote.WSL2.connectionMethod.localhost": "Windowsによって WSL2 VM に転送される localhost (::1) を使用して、WSL のサーバーに接続します。",
	"settings.remote.WSL2.connectionMethod.wsl2VMAddress": "WSL2 VM の IP アドレスを使用して WSL のサーバーに接続します。",
	"settings.remote.WSL2.connectionMethod.wslExeProxy": "'wsl.exe' を使用して WSL に接続を転送するローカル プロキシ サーバーを介して WSL のサーバーに接続します。",
	"walkthrough.title": "Remote - WSL の使用を開始する",
	"walkthrough.exploreCommands.title": "Remote - WSL の使用を開始する",
	"walkthrough.exploreCommands.description": "Remote - WSL は、いくつかのコマンドを VS Code に追加します。\r\n''F1'' を押してコマンド パレットを開き、 「Remote-WSL」\r\nに入力すると、それらを表示できます。VS Code の左下にある緑色のリモート インジケーターを使用して、リモート コマンドのセットを開くこともできます。\r\n[リモート メニューを開く](command:workbench.action.remote.showMenu)",
	"walkthrough.exploreCommands.imageAltText": "リモートの画像 - WSL コマンド。",
	"walkthrough.openWindow.title": "Remote - WSL ウィンドウを開く",
	"walkthrough.openWindow.description": "Remote - WSL を活用するには、ローカル サーバー上で Linux コードを実行する Remote - WSL ウィンドウのディストリビューションに接続します。\r\n WSL の概要エクスペリエンスの次の手順を続行することもできます。\r\n[新しい WSL ウィンドウ](command:remote-wsl.newWindow)",
	"walkthrough.openWindow.imageAltText": "新しいリモートの画像 - WSL ウィンドウ。",
	"walkthrough.createProject.title": "WSL は初めてですか? プロジェクト フォルダーを作成します。",
	"walkthrough.createProject.description": "WSL には独自のファイル システムがあり、[パフォーマンス](https://docs.microsoft.com/windows/wsl/compare-versions#performance-across-os-file-systems) ではプロジェクトを作成してアクセスする利点があります。\r\nVS Code では、Remote - WSL を使用してこのプロジェクトを開き、編集できます。WSL 内で最初のアプリを作成するための \r\n[方法を表示](https://code.visualstudio.com/docs/remote/wsl-tutorial) します。\r\n[WSL ファイル システムで新しいファイルを作成する](command:explorer.newFile)",
	"walkthrough.openProject.title": "プロジェクトがありますか? WSL で開きます。",
	"walkthrough.openProject.description": "WSL ファイル システムにプロジェクトがあると、VS Code で直接開くことができます。\r\n[WSL でフォルダーを開く](command:remote-wsl.openFolder)",
	"walkthrough.linuxEnv.title": "実際の Linux 環境",
	"walkthrough.linuxEnv.description": "Remote - WSL は実際の Linux カーネルを使用してコマンドを実行します。\r\nRemote - WSL ターミナルでの ``uname`` の実行は、Linux 環境にいることを表します。\r\n[ターミナルを開いて Linux コマンドを試す](command:workbench.action.terminal.focus)",
	"walkthrough.linuxEnv.imageAltText": "UNAME コマンドを表示する WSL ターミナル",
	"walkthrough.installTools.title": "ツールのインストール",
	"walkthrough.installTools.description": "豊富な編集とデバッグ エクスペリエンスを入手するには、WSL でプロジェクトの言語、ツールセット、VS Code 拡張機能をインストールします。\r\n[WSL で拡張機能をインストールする](command:workbench.view.extensions)",
	"walkthrough.runDebug.title": "実行とデバッグ",
	"walkthrough.runDebug.description": "Remote - WSL を使用すると、Linux アプリの実行とデバッグが簡単になります。\r\n実行およびデバッグ ビューを使用するか、''F5'' でアプリを実行します。ブレークポイントの設定、変数の検査、呼び出し履歴の移動を行うことができます。\r\n[デバッグ ビューを開いて実行する](command:workbench.view.debug)",
	"walkthrough.runDebug.imageAltText": "Remote-WSL セッションでのデバッグ",
	"walkthrough.comeBack.title": "いつでも戻ってきてください",
	"walkthrough.comeBack.description": "WSL ターミナルで ``コード`` を実行すると、いつでも VS Code リモート - WSL セッションに簡単に戻ることができます。\r\n VS Codeは、Remote - WSL に接続して自動的に起動します。",
	"walkthrough.comeBack.imageAltText": "コード .command を実行している外部ターミナル",
	"command.newWindow": "新しい WSL ウィンドウ",
	"command.newWSLWindow": "新しい WSL ウィンドウ",
	"command.openFolder": "WSL でフォルダーを開く...",
	"command.newWindowForDistro": "ディストリビューションを使用した新しい WSL ウィンドウ...",
	"command.newWindowFromRecommendation": "ディストリビューションを使用した新しい WSL ウィンドウ...",
	"command.reopenInWSL": "WSL でフォルダーをもう一度開く...",
	"command.explorer.openFolder": "WSL でフォルダーを開く",
	"command.reopenInWindows": "Windows でフォルダーをもう一度開く",
	"command.showLog": "ログの表示",
	"command.getHelp": "ヘルプ",
	"command.getStarted": "WSL の概要",
	"command.provideFeedback": "フィードバックの提供",
	"command.reportIssue": "問題を英語で報告...",
	"command.explorer.removeFolder": "最近使用したフォルダーを削除する",
	"command.explorer.openDistro": "WSL への接続",
	"command.explorer.setDefaultDistro": "既定のディストリビューションとして設定",
	"command.explorer.refresh": "最新の情報に更新",
	"command.explorer.addDistro": "ディストリビューションを追加する",
	"command.revealInExplorer": "Explorer で表示",
	"remoteView.name": "WSL ターゲット",
	"welcome.installWsl": "Linux 用 Windows サブシステムをインストールするか、[ヘルプ ビュー](command:~remote.helpPanel.focus) にアクセスして WSL の使用を開始します。",
	"welcome.installDistro": "ディストリビューションを追加して WSL の使用を開始します。\r\n[ディストリビューションを追加する](command:remote-wsl.explorer.addDistro)"
}