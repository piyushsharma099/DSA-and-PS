name: $(Date:yyyyMMdd)$(Rev:.r)

trigger:
    branches:
        include:
            - main
    paths:
        include:
            - open-ssh-remote
    tags:
        include:
            - remote-ssh.*

pr: none

resources:
    repositories:
        - repository: templates
          type: github
          name: microsoft/vscode-engineering
          ref: main
          endpoint: Monaco

extends:
    template: azure-pipelines/extension/stable.yml@templates
    parameters:
        locTsConfigs: $(Build.SourcesDirectory)/open-ssh-remote/tsconfig.json
        locBundleDestination: '$(Build.SourcesDirectory)/open-ssh-remote/out'
        buildSteps:
            - script: |
                yarn install --frozen-lockfile
              displayName: Install dependencies
              workingDirectory: $(Build.SourcesDirectory)/open-ssh-remote

            - script: |
                set -e
                yarn compile

                if [ -f out/**/*.sh ]; then
                chmod +x out/**/*.sh
                fi
              displayName: Build
              workingDirectory: $(Build.SourcesDirectory)/open-ssh-remote

            - bash: |
                # For integration tests on Linux
                /usr/bin/Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
                echo ">>> Started xvfb"
              displayName: Start xvfb

            - script: |
                set -ex

                yarn test
                sleep 2
                rm -rf .vscode-test # Prevent component governance from searching inside
              displayName: Test
              env:
                DISPLAY: ':99.0'
              workingDirectory: $(Build.SourcesDirectory)/open-ssh-remote

        cgSourceScanPath: $(Build.SourcesDirectory)/open-ssh-remote
        workingDirectory: $(Build.SourcesDirectory)/open-ssh-remote